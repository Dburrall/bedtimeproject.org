{"version":3,"file":"static/js/242.d2cc783d.chunk.js","mappings":"8LA2Be,SAASA,EAAT,GAA8D,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UAC7D,OAAOD,GACL,SAAC,KAAD,CACEE,GAAIF,EACJC,UAAW,mBAAqBA,EAAY,IAAMA,EAAY,IAFhE,UAIE,yBAAMH,OAGR,mBAEEC,QAASA,EACTE,UAAW,mBAAqBA,EAAY,IAAMA,EAAY,IAHhE,UAKE,yBAAMH,Q,0ECxBG,SAASK,EAAT,GAAkC,IAAbL,EAAY,EAAZA,SAClC,OACE,gBAAKG,UAAU,sBAAf,UACE,eAAIA,UAAU,YAAd,SAA2BH,Q,iIClBjC,E,MAAeM,EAAf,CAA4B,CAC1BC,UAAW,WACXC,QAAS,aACTC,QAAQ,I,mBCWK,SAASC,EAAT,GAA4C,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,IAAKC,EAAS,EAATA,MAC/C,OACE,iBAAKV,UAAU,wBAAf,WACE,gBAAKW,wBAAyB,CAAEC,OAAQF,MACxC,gBAAKV,UAAU,mBAAf,SAAmCQ,KACnC,gBAAKG,wBAAyB,CAAEC,OAAQH,Q,2CCG/B,SAASI,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KA8BA,OA7BAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGACyBC,MACrB,6DAFJ,cACQC,EADR,gBAIqBA,EAASC,OAJ9B,OAIQC,EAJR,OAKEL,EAAgBK,GALlB,4CADc,uBAAC,WAAD,wBAQdC,GAEAnB,EAAAA,MAAA,uNAeGoB,MAAK,SAACF,GAAD,OAAUG,QAAQC,IAAIJ,MAC3BK,MAAMF,QAAQG,SAChB,KAGD,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAKC,MAAM,WACX,iBAAK9B,UAAU,sBAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,SAACE,EAAA,EAAD,qBACA,iBAAKF,UAAU,wBAAf,WACE,uIAIA,qFAGJ,gBAAKA,UAAU,6BAAf,SACGe,GACCA,EAAagB,KAAI,SAACC,EAAaC,GAC7B,OACE,SAAC,EAAD,CAEEzB,KAAMwB,EAAYF,MAClBrB,IAAKuB,EAAYE,KACjBxB,OAAOyB,EAAAA,EAAAA,GAAuBH,EAAYI,mBAHrCH,SAQf,gBAAKjC,UAAU,mBAAf,UACE,iBAAKA,UAAU,wBAAf,WACE,0HAIA,cAAGqC,KAAK,iCAAR,qCAAqE,KACrE,cAAGA,KAAK,uCAAR,gDAKJ,iBAAKrC,UAAU,iBAAf,WACE,SAACJ,EAAA,EAAD,CAAaG,KAAK,0BAAlB,+BAGA,SAACH,EAAA,EAAD,CAAaG,KAAK,kBAAlB,iC,qBCrFH,SAASoC,EAAuBG,GACrC,GAAa,IAATA,GAAgBA,EAUpB,OALqBA,EAAMC,WACzB,4BACA,8D","sources":["Components/Buttons/StoryButton/StoryButton.js","Components/Structural/PageTitle/PageTitle.js","client.js","Components/General/Contributor/Contributor.js","Pages/About/About.js","utils/addDrupalUrlToImageTag/addDrupalUrlToImageTag.js"],"sourcesContent":["// @ts-check\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./StoryButton.scss\";\n\n/**\n * @function StoryButton\n * @description A link that exists currently on the playground. If a link is\n * passed, the component will route to another page, but if not, the onClick\n * function will be called on click.\n * @param {object} props The JSX props passed to this React component\n * @param {string} props.children The text to render in this button\n * @param {Function} [props.onClick] A function to call when this button is\n * clicked. If props.link is passed, this will not be called.\n * @param {string} [props.link] A link to route to. If this is passed, onClick\n * will not be called.\n * @param {string} [props.className] Additional class names to pass to this\n * component.\n * @author Alexander Burdiss\n * @since 5/13/21\n * @version 1.0.1\n * @component\n * @example\n * ```jsx\n * <StoryButton link=\"/\">Hello, StoryButton!</StoryButton>\n * ```\n */\nexport default function StoryButton({ children, onClick, link, className }) {\n  return link ? (\n    <Link\n      to={link}\n      className={\"ButtonContainer\" + (className ? \" \" + className : \"\")}\n    >\n      <div>{children}</div>\n    </Link>\n  ) : (\n    <button\n      // @ts-ignore\n      onClick={onClick}\n      className={\"ButtonContainer\" + (className ? \" \" + className : \"\")}\n    >\n      <div>{children}</div>\n    </button>\n  );\n}\n","// @ts-check\nimport React from \"react\";\nimport \"./PageTitle.scss\";\n\n/**\n * @function PageTitle\n * @description A stylized Page title, that can easily be used across the site\n * on the different pages\n * @param {object} props The JSX props passed to this React component\n * @param {string} props.children The text to render in this title\n * @author Alexander Burdiss\n * @since 5/28/21\n * @version 1.0.0\n * @component\n * @example\n * <PageTitle>Hello, Title!</PageTitle>\n */\nexport default function PageTitle({ children }) {\n  return (\n    <div className=\"PageTitle-Container\">\n      <h1 className=\"PageTitle\">{children}</h1>\n    </div>\n  );\n}\n","import sanityClient from \"@sanity/client\";\n\nexport default sanityClient({\n  projectId: \"uy12p7sm\", // find this at manage.sanity.io or in your sanity.json\n  dataset: \"production\", // this is from those question during 'sanity init'\n  useCdn: true,\n});\n","// @ts-check\nimport React from \"react\";\nimport \"./Contributor.scss\";\n\n/**\n * @function Contributor\n * @description A formatted display for a contributor for the site.\n * @author Alexander Burdiss\n * @since 6/6/21\n * @version 1.0.0\n * @param {object} props The JSX props passed to this React component.\n * @param {String} props.name The name of the contributor.\n * @param {String} props.bio The biography of the contributor.\n * @param {String} props.image The path to the image of the contributor to\n * render\n */\nexport default function Contributor({ name, bio, image }) {\n  return (\n    <div className=\"Contributor-Container\">\n      <div dangerouslySetInnerHTML={{ __html: image }} />\n      <div className=\"Contributor-Name\">{name}</div>\n      <div dangerouslySetInnerHTML={{ __html: bio }} />\n    </div>\n  );\n}\n","// @ts-check\nimport React, { useEffect, useState } from \"react\";\nimport sanityClient from \"../../client\";\n\nimport PageTitle from \"../../Components/Structural/PageTitle/PageTitle\";\nimport Contributor from \"../../Components/General/Contributor/Contributor\";\nimport StandardWrapper from \"../../Components/Structural/StandardWrapper/StandardWrapper\";\nimport StoryButton from \"../../Components/Buttons/StoryButton/StoryButton\";\nimport SEO from \"../../Components/Structural/SEO/SEO\";\n\nimport \"./About.scss\";\nimport { addDrupalUrlToImageTag } from \"../../utils/addDrupalUrlToImageTag/addDrupalUrlToImageTag\";\n\n/**\n * @function About\n * @description Information about the contributors of the site, and about the\n * site itself.\n * @author Alexander Burdiss\n * @since 6/6/21\n * @version 1.4.3\n * @component\n * @example\n * <About />\n */\nexport default function About() {\n  const [contributors, setContributors] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\n        \"https://drupal.bedtimeproject.dev/rest/views/contributors\"\n      );\n      const data = await response.json();\n      setContributors(data);\n    }\n    fetchData();\n\n    sanityClient\n      .fetch(\n        `*[_type == \"contributor\"]{\n          name,\n          slug,\n          image{\n            asset->{\n              _id,\n              url\n            },\n          },\n          alt,\n          bio\n        }`\n      )\n      .then((data) => console.log(data))\n      .catch(console.error);\n  }, []);\n\n  return (\n    <StandardWrapper>\n      <SEO title=\"About\" />\n      <div className=\"AboutPage-Container\">\n        <div className=\"Header-Container\">\n          <PageTitle>About</PageTitle>\n          <div className=\"Description-Contianer\">\n            <div>\n              The Bedtime Project aims at helping you get to sleep, or just have\n              a fun evening with stories and games.\n            </div>\n            <div>Here are the people who make this site possible:</div>\n          </div>\n        </div>\n        <div className=\"All-Contributors-Container\">\n          {contributors &&\n            contributors.map((contributor, index) => {\n              return (\n                <Contributor\n                  key={index}\n                  name={contributor.title}\n                  bio={contributor.body}\n                  image={addDrupalUrlToImageTag(contributor.field_main_image)}\n                />\n              );\n            })}\n        </div>\n        <div className=\"Header-Container\">\n          <div className=\"Description-Contianer\">\n            <div>\n              Contact us if you have any questions at all, want to report a bug,\n              or have any suggestions.\n            </div>\n            <a href=\"mailto:code@bedtimeproject.org\">code@bedtimeproject.org</a>{\" \"}\n            <a href=\"mailto:moonbloom@bedtimeproject.org \">\n              moonbloom@bedtimeproject.org\n            </a>\n          </div>\n        </div>\n        <div className=\"Link-Container\">\n          <StoryButton link=\"/about/acknowledgements\">\n            Acknowledgements\n          </StoryButton>\n          <StoryButton link=\"/about/licenses\">Licenses</StoryButton>\n        </div>\n      </div>\n    </StandardWrapper>\n  );\n}\n","// @ts-check\n/**\n * @function addDrupalUrlToImageTag\n * @description Adds a missing drupal URL to an image object. Useful if the\n * REST api returns an image object with a relative path.\n * @param {string} input An image object with an incomplete url, typically\n * returned from a REST endpoint.\n * @returns {string} The same image object with the drupal url added where it\n * is needed to render the image correctly.\n * @author Alexander Burdiss\n * @since 10/2/21\n * @version 1.1.1\n */\nexport function addDrupalUrlToImageTag(input) {\n  if (input == \"\" || !input) {\n    return undefined;\n  }\n\n  // @ts-ignore\n  const correctedUrl = input.replaceAll(\n    'src=\"/sites/default/files',\n    'src=\"https://drupal.bedtimeproject.dev/sites/default/files'\n  );\n\n  return correctedUrl;\n}\n"],"names":["StoryButton","children","onClick","link","className","to","PageTitle","sanityClient","projectId","dataset","useCdn","Contributor","name","bio","image","dangerouslySetInnerHTML","__html","About","useState","contributors","setContributors","useEffect","fetch","response","json","data","fetchData","then","console","log","catch","error","StandardWrapper","SEO","title","map","contributor","index","body","addDrupalUrlToImageTag","field_main_image","href","input","replaceAll"],"sourceRoot":""}