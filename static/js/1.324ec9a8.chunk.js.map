{"version":3,"sources":["utils/getContrast/getContrast.js","Pages/Read/BedtimeStories/MrsBlueSky/images/Mountain.svg","Pages/Read/BedtimeStories/MrsBlueSky/images/Sun.svg","utils/useScrollAnimation/useScrollAnimation.js","Components/ScrollAnimation/DefaultTitle/DefaultTitle.js","Components/ScrollAnimation/CenteredTitle/CenteredTitle.js","Components/ScrollAnimation/DefaultAttribution/DefaultAttribution.js","Components/ScrollAnimation/CenteredAttribution/CenteredAttribution.js","Components/ScrollAnimation/DefaultStanza/DefaultStanza.js","Components/ScrollAnimation/StanzaImage/animations/fade/fade.js","Components/ScrollAnimation/StanzaImage/animations/slidedown/slidedown.js","Components/ScrollAnimation/StanzaImage/animations/slideup/slideup.js","Components/ScrollAnimation/StanzaImage/animations/slideleft/slideleft.js","Components/ScrollAnimation/StanzaImage/animations/slideright/slideright.js","Components/ScrollAnimation/StanzaImage/animations/slidedownleft/slidedownleft.js","Components/ScrollAnimation/StanzaImage/animations/slidedownright/slidedownright.js","Components/ScrollAnimation/StanzaImage/animations/slideupleft/slideupleft.js","Components/ScrollAnimation/StanzaImage/animations/slideupright/slideupright.js","Components/ScrollAnimation/StanzaImage/animations/longslideleft/longslideleft.js","Components/ScrollAnimation/StanzaImage/animations/longslideright/longslideright.js","Pages/Read/BedtimeStories/SurfersHideaway/images/AlaskaFlag.svg","Pages/Read/BedtimeStories/SurfersHideaway/images/CaliforniaFlag.svg","Pages/Read/BedtimeStories/SurfersHideaway/images/CitySkyline.svg","Pages/Read/BedtimeStories/SurfersHideaway/images/Corn.svg","Pages/Read/BedtimeStories/SurfersHideaway/images/Grass.svg","Pages/Read/BedtimeStories/SurfersHideaway/images/Surfboard.svg","Pages/Read/BedtimeStories/SurfersHideaway/images/Swimsuit.svg","Pages/Read/BedtimeStories/SurfersHideaway/images/Umbrella.svg","Pages/Read/BedtimeStories/SurfersHideaway/images/WaveOutline.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/BlueFlowers.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/CaveEntrance.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/CherryPie.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Constellation1.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/BlueKite.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Ramen.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Town.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Treasure.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/ActionBox.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Bed.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Constellation2.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Constellation3.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/FullMoon.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Mountains.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Mount-Everest.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/MusicNotes.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Oak.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Penny.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/PinkPoodle.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Shrub1.svg","Pages/Read/BedtimeStories/TheGuideToSunset/images/Shrub2.svg","Components/ScrollAnimation/StanzaImage/StanzaImage.js","Components/ScrollAnimation/Body/Body.js","Components/ScrollAnimation/ScrollAnimation.js"],"names":["getContrast","inputHexColor","hexcolor","slice","length","split","map","hex","join","parseInt","substr","useScrollAnimation","story","useEffect","page","document","querySelector","body","id","bodyStyleMinHeight","handleScroll","style","setProperty","window","pageYOffset","offsetHeight","innerHeight","minHeight","addEventListener","removeEventListener","removeProperty","DefaultTitle","children","background","author","className","backgroundColor","color","CenteredTitle","DefaultAttribution","backlink","to","CenteredAttribution","DefaultStanza","index","fade","imageIndex","stanzaDuration","oneIndexPercent","animationOverlap","indexModifiers","slidedown","slideup","slideleft","slideright","slidedownleft","slidedownright","slideupleft","slideupright","longslideleft","longslideright","StanzaImage","stanzaCount","animation","positionX","positionY","url","rotation","scale","scaleValue","undefined","rotationValue","right","Number","isInteger","left","center","top","bottom","src","alt","AlaskaFlag","CaliforniaFlag","CitySkyline","Corn","Grass","Surfboard","Swimsuit","Umbrella","WaveOutline","BlueFlowers","CaveEntrance","CherryPie","Constellation1","Kite","Ramen","Town","Treasure","ActionBox","Bed","Constellation2","Constellation3","FullMoon","Mountains","MountEverest","MusicNotes","Oak","Penny","PinkPoodle","Shrub1","Shrub2","Mountain","Sun","Body","bodyAnimationString","titleBackground","forEach","stanza","defaultBackgroundColor","attributionBackground","getBodyAnimation","default","stanzaBackgroundColor","stanzaCard","images","imageObject","component","ScrollAnimation","font","title","centered","titleCard","attribution","attributionCard"],"mappings":"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","file":"static/js/1.324ec9a8.chunk.js","sourcesContent":["// @ts-check\n/**\n * @function getContrast\n * @description Get the contrasting color for any hex color\n * Derived from work by Brian Suda, https://24ways.org/2010/calculating-color-contrast/\n * @see https://gomakethings.com/dynamically-changing-the-text-color-based-on-background-color-contrast-with-vanilla-js/\n * @param  {string} inputHexColor A hexcolor value\n * @return {string|undefined} The contrasting color (black or white), or\n * undefined if the input is not a string.\n * @since 10/14/21\n * @version 1.0.1\n * @author Alexander Burdiss\n */\nexport function getContrast(inputHexColor) {\n  if (typeof inputHexColor !== \"string\") {\n    return undefined;\n  }\n\n  let hexcolor = inputHexColor;\n\n  // If a leading # is provided, remove it\n  if (hexcolor.slice(0, 1) === \"#\") {\n    hexcolor = hexcolor.slice(1);\n  }\n\n  // If a three-character hexcode, make six-character\n  if (hexcolor.length === 3) {\n    hexcolor = hexcolor\n      .split(\"\")\n      .map((hex) => hex + hex)\n      .join(\"\");\n  }\n\n  // Convert to RGB value\n  let r = parseInt(hexcolor.substr(0, 2), 16);\n  let g = parseInt(hexcolor.substr(2, 2), 16);\n  let b = parseInt(hexcolor.substr(4, 2), 16);\n\n  // Get YIQ ratio\n  let yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\n  // Check contrast\n  return yiq >= 128 ? \"black\" : \"white\";\n}\n","export default __webpack_public_path__ + \"static/media/Mountain.cf34ef79.svg\";","export default __webpack_public_path__ + \"static/media/Sun.20608a7d.svg\";","// @ts-check\nimport { useEffect } from \"react\";\n\n/**\n * @function useScrollAnimation\n * @description A custom hook that hooks up some necessary variables for the\n * scroll animation.\n * @todo Make this work with the custom npm package instead of having to use\n * this function\n * @author Alexander Burdiss\n * @since 10/17/21\n * @version 1.0.0\n * @param {Object} story\n */\nexport function useScrollAnimation(story) {\n  useEffect(() => {\n    let page = document.querySelector(\"#page\");\n    // If the \"page\" id doesn't exist, set it on the body.\n    if (!page) {\n      page = document.body;\n      document.body.id = \"page\";\n    }\n    const bodyStyleMinHeight = `${story.body.length * 100}vh`;\n    // @ts-ignore\n    page.style.minHeight = bodyStyleMinHeight;\n    function handleScroll() {\n      document.body.style.setProperty(\n        \"--scroll\",\n        // @ts-ignore\n        window.pageYOffset / (page.offsetHeight - window.innerHeight)\n      );\n    }\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n      // @ts-ignore\n      page.style.minHeight = \"\";\n      document.body.style.removeProperty(\"--scroll\");\n    };\n  }, [story.body.length]);\n}\n","// @ts-check\nimport React from \"react\";\nimport \"./DefaultTitle.scss\";\n\nimport { getContrast } from \"../../../utils/getContrast/getContrast\";\n\n/**\n * @function DefaultTitle\n * @description The title component for a scroll animation. Styled similarly to\n * a stanza\n * @author Alexander Burdiss\n * @since 6/4/21\n * @version 1.3.0\n * @param {object} props The JSX props passed to this React component\n * @param {String} props.children The title of the scroll animation to render\n * @param {String} props.background The color of the background for this title\n * component\n * @param {String} props.author The author of the poem\n * @param {number} props.stanzaCount The number of stanzas in the body\n */\nexport default function DefaultTitle({ children, background, author }) {\n  return (\n    <header\n      className=\"ScrollAnimation-Title-Container\"\n      style={{\n        backgroundColor: background,\n      }}\n      id=\"title\"\n    >\n      <div\n        className=\"ScrollAnimation-Title-Border\"\n        style={{\n          color: getContrast(background),\n        }}\n      >\n        <h1>{children}</h1>\n        <h2>{author}</h2>\n      </div>\n    </header>\n  );\n}\n","// @ts-check\nimport React from \"react\";\nimport \"./CenteredTitle.scss\";\n\nimport { getContrast } from \"../../../utils/getContrast/getContrast\";\n\n/**\n * @namespace CenteredTitle\n * @function CenteredTitle\n * @description The title component for a scroll animation. Styled similarly\n * to the DefaultTitle, but centered on the page.\n * @author Alexander Burdiss\n * @since 9/5/21\n * @version 1.1.0\n * @param {object} props The JSX props passed to this React component\n * @param {String} props.children The title of the scroll animation to render\n * @param {String} props.background The color of the background for this title\n * component\n * @param {String} props.author The author of the poem\n */\nexport default function CenteredTitle({ children, background, author }) {\n  return (\n    <header\n      className=\"ScrollAnimation-CenteredTitle-Container\"\n      style={{\n        backgroundColor: background,\n      }}\n      id=\"title\"\n    >\n      <div\n        className=\"ScrollAnimation-CenteredTitle-Border\"\n        style={{\n          color: getContrast(background),\n        }}\n      >\n        <h1>{children}</h1>\n        <h2>{author}</h2>\n      </div>\n    </header>\n  );\n}\n","// @ts-check\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./DefaultAttribution.scss\";\n\nimport { getContrast } from \"../../../utils/getContrast/getContrast\";\n\n/**\n * @namespace DefaultAttribution\n * @function DefaultAttribution\n * @description The final slide of text on a scroll animation\n * @author Alexander Burdiss\n * @since 6/5/21\n * @version 1.3.0\n * @param {object} props The JSX props passed to this React component\n * @param {React.Component} props.children The text to render on this component\n * @param {string} props.background The background to render on this component\n * @param {string} props.backlink\n */\nexport default function DefaultAttribution({ children, background, backlink }) {\n  return (\n    <div\n      className=\"ScrollAnimation-Attribution-Container\"\n      style={{ backgroundColor: background }}\n      id=\"attribution\"\n    >\n      <div\n        className=\"ScrollAnimation-Attribution-Border\"\n        style={{\n          color: getContrast(background),\n        }}\n      >\n        <div>{children}</div>\n        <Link to={backlink} className=\"Back-Button\">\n          Back to site\n        </Link>\n      </div>\n    </div>\n  );\n}\n","// @ts-check\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./CenteredAttribution.scss\";\n\nimport { getContrast } from \"../../../utils/getContrast/getContrast\";\n\n/**\n * @namespace CenteredAttribution\n * @function CenteredAttribution\n * @description The final slide of text on a scroll animation, styled to be in\n * the center of the screen.\n * @author Alexander Burdiss\n * @since 9/5/21\n * @version 1.0.0\n * @param {object} props The JSX props passed to this React component\n * @param {React.Component} props.children The text to render on this component\n * @param {string} props.background The background to render on this component\n * @param {string} props.backlink\n */\nexport default function CenteredAttribution({\n  children,\n  background,\n  backlink,\n}) {\n  return (\n    <div\n      className=\"ScrollAnimation-CenteredAttribution-Container\"\n      style={{ backgroundColor: background }}\n      id=\"attribution\"\n    >\n      <div\n        className=\"ScrollAnimation-CenteredAttribution-Border\"\n        style={{\n          color: getContrast(background),\n        }}\n      >\n        <div>{children}</div>\n        <Link to={backlink} className=\"Back-Button\">\n          Back to site\n        </Link>\n      </div>\n    </div>\n  );\n}\n","// @ts-check\nimport React from \"react\";\n\nimport { getContrast } from \"../../../utils/getContrast/getContrast\";\n\nimport \"./DefaultStanza.scss\";\n\n/**\n * @function DefaultStanza\n * @description One stanza of text in a scroll animation story.\n * @param {object} props The JSX props passed to this React component\n * @param {React.Component} props.children The paragraphs to render in this\n * component\n * @param {string} props.background The background color to render on this\n * slide\n * @param {number} props.index The index of this stanza, to calculate the scroll\n * linked positioning of the element\n * @author Alexander Burdiss\n * @since 6/4/21\n * @version 1.2.1\n * @component\n * @example\n * <Stanza>\n *   <p>Some text</p>\n * </Stanza>\n */\nexport default function DefaultStanza({ children, background, index }) {\n  return (\n    <div\n      id={\"stanza\" + index}\n      className=\"ScrollAnimation-Stanza-Container\"\n      style={{\n        backgroundColor: background,\n        color: getContrast(background),\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n","// @ts-check\n/**\n * @function fade\n * @description Returns a string for a keyframes fade animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function fade(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}fade${imageIndex} {\n    0% {\n      opacity: 0;\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 0;\n    }\n  }`;\n}\n","// @ts-check\n/**\n * @function slidedown\n * @description Returns a string for a keyframes slide down animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slidedown(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slidedown${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateY(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateY(200px);\n    }\n  }`;\n}\n","// @ts-check\n/**\n * @function slideup\n * @description Returns a string for a keyframes slide up animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideup(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slideup${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(-50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(-125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateY(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateY(-200px);\n    }\n  }`;\n}\n","// @ts-check\n/**\n * @function slideleft\n * @description Returns a string for a keyframes slide left animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideleft(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slideleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-200px);\n    }\n  }`;\n}\n","// @ts-check\n/**\n * @function slideright\n * @description Returns a string for a keyframes slide right animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideright(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slideright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(200px);\n    }\n  }`;\n}\n","// @ts-check\n/**\n * @function slidedownleft\n * @description Returns a string for a keyframes slide down left animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slidedownleft(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slidedownleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-50px) translateY(50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-125px) translateY(125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(200px);\n    }\n  }`;\n}\n","// @ts-check\n/**\n * @function slidedownright\n * @description Returns a string for a keyframes slide down right animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slidedownright(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slidedownright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(50px) translateY(50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(125px) translateY(125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(200px) translateY(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(200px) translateY(200px);\n    }\n  }`;\n}\n","// @ts-check\n/**\n * @function slideupleft\n * @description Returns a string for a keyframes slide up left animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideupleft(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slideupleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-50px) translateY(-50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-125px) translateY(-125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(-200px);\n    }\n  }`;\n}\n","// @ts-check\n/**\n * @function slideupright\n * @description Returns a string for a keyframes slide up right animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideupright(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slideupright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(50px) translateY(-50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(125px) translateY(-125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(200px) translateY(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(200px) translateY(-200px);\n    }\n  }`;\n}\n","// @ts-check\n/**\n * @function longslideleft\n * @description Returns a string for a keyframes slide left animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 8/8/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function longslideleft(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}longslideleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-300px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-600px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-900px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-900px);\n    }\n  }`;\n}\n","// @ts-check\n/**\n * @function longslideright\n * @description Returns a string for a keyframes slide left animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 8/8/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function longslideright(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}longslideright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(300px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(600px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(900px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(900px);\n    }\n  }`;\n}\n","export default __webpack_public_path__ + \"static/media/AlaskaFlag.c2caed8d.svg\";","export default __webpack_public_path__ + \"static/media/CaliforniaFlag.bf69a5ef.svg\";","export default __webpack_public_path__ + \"static/media/CitySkyline.c971a957.svg\";","export default __webpack_public_path__ + \"static/media/Corn.ff19508c.svg\";","export default __webpack_public_path__ + \"static/media/Grass.76536420.svg\";","export default __webpack_public_path__ + \"static/media/Surfboard.80b2221e.svg\";","export default __webpack_public_path__ + \"static/media/Swimsuit.a9fc0c93.svg\";","export default __webpack_public_path__ + \"static/media/Umbrella.49818ec3.svg\";","export default __webpack_public_path__ + \"static/media/WaveOutline.674050ed.svg\";","export default __webpack_public_path__ + \"static/media/BlueFlowers.be6f3d44.svg\";","export default __webpack_public_path__ + \"static/media/CaveEntrance.875c6528.svg\";","export default __webpack_public_path__ + \"static/media/CherryPie.02e908f6.svg\";","export default __webpack_public_path__ + \"static/media/Constellation1.f20fd873.svg\";","export default __webpack_public_path__ + \"static/media/BlueKite.32e5ae78.svg\";","export default __webpack_public_path__ + \"static/media/Ramen.973d34de.svg\";","export default __webpack_public_path__ + \"static/media/Town.b976cfa0.svg\";","export default __webpack_public_path__ + \"static/media/Treasure.ca4687f3.svg\";","export default __webpack_public_path__ + \"static/media/ActionBox.324ce66e.svg\";","export default __webpack_public_path__ + \"static/media/Bed.939b0e6d.svg\";","export default __webpack_public_path__ + \"static/media/Constellation2.3004a48c.svg\";","export default __webpack_public_path__ + \"static/media/Constellation3.6c1bef0d.svg\";","export default __webpack_public_path__ + \"static/media/FullMoon.93c9e611.svg\";","export default __webpack_public_path__ + \"static/media/Mountains.01b988fa.svg\";","export default __webpack_public_path__ + \"static/media/Mount-Everest.89787e4b.svg\";","export default __webpack_public_path__ + \"static/media/MusicNotes.c9a9e04e.svg\";","export default __webpack_public_path__ + \"static/media/Oak.db44e893.svg\";","export default __webpack_public_path__ + \"static/media/Penny.94f5ad40.svg\";","export default __webpack_public_path__ + \"static/media/PinkPoodle.b1eb5be5.svg\";","export default __webpack_public_path__ + \"static/media/Shrub1.3d3c36be.svg\";","export default __webpack_public_path__ + \"static/media/Shrub2.d24e68ea.svg\";","// @ts-check\nimport React from \"react\";\n\nimport \"./StanzaImage.scss\";\n\n// Animations\nimport { fade } from \"./animations/fade/fade\";\nimport { slidedown } from \"./animations/slidedown/slidedown\";\nimport { slideup } from \"./animations/slideup/slideup\";\nimport { slideleft } from \"./animations/slideleft/slideleft\";\nimport { slideright } from \"./animations/slideright/slideright\";\nimport { slidedownleft } from \"./animations/slidedownleft/slidedownleft\";\nimport { slidedownright } from \"./animations/slidedownright/slidedownright\";\nimport { slideupleft } from \"./animations/slideupleft/slideupleft\";\nimport { slideupright } from \"./animations/slideupright/slideupright\";\nimport { longslideleft } from \"./animations/longslideleft/longslideleft\";\nimport { longslideright } from \"./animations/longslideright/longslideright\";\n\n// Newport Nebraska\nimport AlaskaFlag from \"../../../Pages/Read/BedtimeStories/SurfersHideaway/images/AlaskaFlag.svg\";\nimport CaliforniaFlag from \"../../../Pages/Read/BedtimeStories/SurfersHideaway/images/CaliforniaFlag.svg\";\nimport CitySkyline from \"../../../Pages/Read/BedtimeStories/SurfersHideaway/images/CitySkyline.svg\";\nimport Corn from \"../../../Pages/Read/BedtimeStories/SurfersHideaway/images/Corn.svg\";\nimport Grass from \"../../../Pages/Read/BedtimeStories/SurfersHideaway/images/Grass.svg\";\nimport Surfboard from \"../../../Pages/Read/BedtimeStories/SurfersHideaway/images/Surfboard.svg\";\nimport Swimsuit from \"../../../Pages/Read/BedtimeStories/SurfersHideaway/images/Swimsuit.svg\";\nimport Umbrella from \"../../../Pages/Read/BedtimeStories/SurfersHideaway/images/Umbrella.svg\";\nimport WaveOutline from \"../../../Pages/Read/BedtimeStories/SurfersHideaway/images/WaveOutline.svg\";\n\n// Guide to Sunset\nimport BlueFlowers from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/BlueFlowers.svg\";\nimport CaveEntrance from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/CaveEntrance.svg\";\nimport CherryPie from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/CherryPie.svg\";\nimport Constellation1 from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Constellation1.svg\";\nimport Kite from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/BlueKite.svg\";\nimport Ramen from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Ramen.svg\";\nimport Town from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Town.svg\";\nimport Treasure from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Treasure.svg\";\nimport ActionBox from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/ActionBox.svg\";\nimport Bed from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Bed.svg\";\nimport Constellation2 from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Constellation2.svg\";\nimport Constellation3 from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Constellation3.svg\";\nimport FullMoon from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/FullMoon.svg\";\nimport Mountains from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Mountains.svg\";\nimport MountEverest from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Mount-Everest.svg\";\nimport MusicNotes from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/MusicNotes.svg\";\nimport Oak from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Oak.svg\";\nimport Penny from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Penny.svg\";\nimport PinkPoodle from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/PinkPoodle.svg\";\nimport Shrub1 from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Shrub1.svg\";\nimport Shrub2 from \"../../../Pages/Read/BedtimeStories/TheGuideToSunset/images/Shrub2.svg\";\n\n// Mrs. Blue Sky\nimport Mountain from \"../../../Pages/Read/BedtimeStories/MrsBlueSky/images/Mountain.svg\";\nimport Sun from \"../../../Pages/Read/BedtimeStories/MrsBlueSky/images/Sun.svg\";\n\n/**\n * @function stanzaImage\n * @description Displays One image for the stanza.\n * @param {object} props The JSX props passed to this React component\n * @param {React.Component|string} props.children The image to render inside this\n * stanza.\n * @param {number} props.index The stanza index that this image is being\n * rendered with\n * @param {number} props.imageIndex The image index for the given stanza\n * @param {number} props.stanzaCount The number of Stanzas in this total\n * animation\n * @param {string} [props.animation='fade'] The animation type that will be\n * displayed on this component. Available animations are:\n * 'fade', 'slidedown', 'slideup', 'slideleft', 'slideright', 'slidedownleft',\n * 'slidedownright', 'slideupleft', 'slideupright'\n * @param {string} props.positionX The horizontal position of the image\n * relative to the rest of the scroll animation. Available positions are:\n * 'left', 'center', 'right'\n * @param {string} props.positionY The vertical position of the image relative\n * to the rest of the scroll animation. Available positions are:\n * 'top', 'center', 'bottom'\n * @param {string} props.url A url to use for an external image.\n * @param {number} props.rotation The rotation of the image\n * @param {number} props.scale The amount to scale the image\n * @param {string} props.animationOverlap Whether the animations should overlap\n * with the previous and next animations\n * @param {number} props.stanzaDuration The number of stanzas that this image\n * should remain onscreen.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 2.0.1\n */\nexport default function StanzaImage({\n  children,\n  index,\n  imageIndex,\n  stanzaCount,\n  animation = \"fade\",\n  positionX,\n  positionY,\n  stanzaDuration,\n  url,\n  rotation,\n  scale,\n  animationOverlap,\n}) {\n  const scaleValue = scale != undefined ? scale : 1;\n  const rotationValue = rotation != undefined ? rotation : 0;\n  const oneIndexPercent = 100 / (stanzaCount + 2);\n\n  return (\n    <div>\n      <style>{`\n        #stanza${index}Image${imageIndex} {\n          animation-name: stanza${index}${animation}${imageIndex};\n          animation-duration: 1s;\n          animation-timing-function: linear;\n        }\n\n        #stanza${index}Image${imageIndex} .Image {\n          height: ${250 * scaleValue}px;\n          min-width: ${250 * scaleValue}px;\n          transform: translateX(-${(250 * scaleValue) / 2}px) translateY(-${\n        (250 * scaleValue) / 2\n      }px) rotate(${rotationValue}deg);\n        }\n\n        ${\n          animation === \"fade\"\n            ? fade(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slidedown\"\n            ? slidedown(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slideup\"\n            ? slideup(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slideleft\"\n            ? slideleft(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slideright\"\n            ? slideright(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slidedownleft\"\n            ? slidedownleft(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slidedownright\"\n            ? slidedownright(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slideupleft\"\n            ? slideupleft(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slideupright\"\n            ? slideupright(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"longslideleft\"\n            ? longslideleft(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"longslideright\"\n            ? longslideright(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n      `}</style>\n      <div\n        id={`stanza${index}Image${imageIndex}`}\n        className=\"ScrollAnimation-StanzaImage-Container\"\n        style={{\n          right: Number.isInteger(positionX)\n            ? `${positionX}%`\n            : { left: \"45%\", center: \"25%\", right: \"5%\" }[positionX],\n          top: Number.isInteger(positionY)\n            ? `${positionY}%`\n            : { top: \"5%\", center: \"30%\", bottom: \"55%\" }[positionY],\n        }}\n      >\n        {children === \"url\" ? (\n          <img src={url} alt={\"\"} className=\"Image\" />\n        ) : (\n          <img\n            className=\"Image\"\n            src={\n              {\n                // Newport Nebraska\n                \"Alaska Flag\": AlaskaFlag,\n                \"California Flag\": CaliforniaFlag,\n                \"City Skyline\": CitySkyline,\n                Corn: Corn,\n                Grass: Grass,\n                Surfboard: Surfboard,\n                Swimsuit: Swimsuit,\n                Umbrella: Umbrella,\n                \"Wave Outline\": WaveOutline,\n                // Guide to Sunset\n                \"Blue Flowers\": BlueFlowers,\n                \"Cave Entrance\": CaveEntrance,\n                \"Cherry Pie\": CherryPie,\n                \"Constellation 1\": Constellation1,\n                Kite: Kite,\n                Ramen: Ramen,\n                Town: Town,\n                Treasure: Treasure,\n                \"Action Box\": ActionBox,\n                Bed: Bed,\n                \"Constellation 2\": Constellation2,\n                \"Constellation 3\": Constellation3,\n                \"Full Moon\": FullMoon,\n                Mountains: Mountains,\n                \"Mount Everest\": MountEverest,\n                \"Music Notes\": MusicNotes,\n                Oak: Oak,\n                Penny: Penny,\n                \"Pink Poodle\": PinkPoodle,\n                \"Shrub 1\": Shrub1,\n                \"Shrub 2\": Shrub2,\n                // Mrs. Blue Sky\n                Mountain: Mountain,\n                Sun: Sun,\n              }[children]\n            }\n            alt={\"\"}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","// @ts-check\nimport React from \"react\";\nimport DefaultStanza from \"../DefaultStanza/DefaultStanza\";\nimport StanzaImage from \"../StanzaImage/StanzaImage\";\n\n/**\n * @function Body\n * @description The body of an animated story, used for grouping the logic\n * together for easier implementation of an animated story.\n * @author Alexander Burdiss\n * @since 7/8/21\n * @version 2.2.0\n * @param {object} props The JSX props passed to this React component\n * @param {object} props.story The story object with all of the config baked\n * in.\n */\nexport default function Body({ story }) {\n  const oneIndexPercent = 100 / (story.body.length + 2);\n\n  function getBodyAnimation() {\n    let bodyAnimationString = `0% {\n      background: ${story.titleBackground}\n    }\n    `;\n    story.body.forEach((stanza, index) => {\n      bodyAnimationString += `${(index + 1) * oneIndexPercent}% {\n          background: ${\n            stanza.background ? stanza.background : story.defaultBackgroundColor\n          };\n        }\n        ${(index + 1.5) * oneIndexPercent}% {\n          background: ${\n            stanza.background ? stanza.background : story.defaultBackgroundColor\n          };\n        }\n        `;\n    });\n    bodyAnimationString += `100% {\n      background: ${story.attributionBackground}\n    }`;\n    return bodyAnimationString;\n  }\n\n  return (\n    <main>\n      <style>{`\n        body {\n          animation-name: scrollBody;\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        @keyframes scrollBody {\n          ${getBodyAnimation()}\n        }\n      `}</style>\n      {story.body.map((stanza, index) => {\n        return (\n          <div key={index}>\n            <style>{`\n              #stanza${index + 1} {\n                animation-name: stanza${index + 1};\n                animation-duration: 1s;\n                animation-timing-function: ease-in-out;\n              }\n\n              @keyframes stanza${index + 1} {\n                0% {\n                  top: 100vh;\n                }\n                ${\n                  index + 1 > 0\n                    ? `${(index + 1 - 0.5) * oneIndexPercent}% {\n                    top: 100vh;\n                  }`\n                    : \"\"\n                }\n                ${(index + 1) * oneIndexPercent}% {\n                  top: 34vh;\n                }\n                ${(index + 1 + 0.5) * oneIndexPercent}% {\n                  top: 34vh;\n                }\n                ${(index + 1 + 1) * oneIndexPercent}% {\n                  top: -100vh;\n                }\n                100% {\n                  top: -100%;\n                }\n              }\n            `}</style>\n            {\n              {\n                default: (\n                  <DefaultStanza\n                    index={index + 1}\n                    background={story.stanzaBackgroundColor}\n                  >\n                    {stanza.stanza}\n                  </DefaultStanza>\n                ),\n              }[story.stanzaCard]\n            }\n            {stanza.images?.map((imageObject, imageIndex) => {\n              return (\n                <StanzaImage\n                  index={index + 1}\n                  imageIndex={imageIndex}\n                  stanzaCount={story.body.length}\n                  key={\"\" + index + imageIndex}\n                  animation={imageObject.animation}\n                  positionX={imageObject.positionX}\n                  positionY={imageObject.positionY}\n                  stanzaDuration={imageObject.stanzaCount}\n                  url={imageObject.url}\n                  rotation={imageObject.rotation}\n                  scale={imageObject.scale}\n                  animationOverlap={story.animationOverlap}\n                >\n                  {imageObject.component}\n                </StanzaImage>\n              );\n            })}\n          </div>\n        );\n      })}\n    </main>\n  );\n}\n","// @ts-check\nimport React, { useEffect } from \"react\";\n\nimport DefaultTitle from \"./DefaultTitle/DefaultTitle\";\nimport CenteredTitle from \"./CenteredTitle/CenteredTitle\";\nimport DefaultAttribution from \"./DefaultAttribution/DefaultAttribution\";\nimport CenteredAttribution from \"./CenteredAttribution/CenteredAttribution\";\nimport Body from \"./Body/Body\";\n\n/**\n * @function ScrollAnimation\n * @description A container for one Scroll Animation that handles the styles and\n * different logistical elements for a scroll animation poem. This should be\n * used in conjunction with `Stanza`, `Title`, and `Attribution`.\n * @param {object} props The JSX props passed to this React component\n * @param {object} props.story\n * @author Alexander Burdiss\n * @since 6/26/21\n * @version 2.0.0\n * @component\n * @example\n * <ScrollAnimation story={story}/>\n */\nexport default function ScrollAnimation({ story }) {\n  const oneIndexPercent = 100 / (story.body.length + 2);\n\n  useEffect(() => {\n    if (document.querySelector(\"#page\")) {\n      const bodyStyleMinHeight = `${story.body.length * 100}vh`;\n      // @ts-ignore\n      document.querySelector(\"#page\").style.minHeight = bodyStyleMinHeight;\n      function handleScroll() {\n        document.body.style.setProperty(\n          \"--scroll\",\n          // @ts-ignore\n          window.pageYOffset /\n            // @ts-ignore\n            (document.querySelector(\"#page\").offsetHeight - window.innerHeight)\n        );\n      }\n      handleScroll();\n      window.addEventListener(\"scroll\", handleScroll);\n      return () => {\n        window.removeEventListener(\"scroll\", handleScroll);\n        // @ts-ignore\n        document.querySelector(\"#page\").style.minHeight = \"\";\n        document.body.style.removeProperty(\"--scroll\");\n      };\n    }\n  }, [story.body.length]);\n\n  return (\n    <div className=\"ScrollAnimation-Container\">\n      {/* Styles for the global object, just on this page */}\n      <style>{`\n        .ScrollAnimation-Container {\n          font-family: ${story.font}\n        }\n\n        :root * {\n          /* Pause the animation */\n          animation-play-state: paused;\n          /* Bind the animation to scroll */\n          animation-delay: calc(var(--scroll) * -1s);\n          /* These last 2 properites clean up overshoot weirdness */\n          animation-iteration-count: 1;\n          animation-fill-mode: both;\n        }\n\n        #title {\n          animation-name: title;\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        @keyframes title {\n          0% {\n            top: 34vh;\n          }\n          ${oneIndexPercent}% {\n            top: -100vh;\n          }\n          100% {\n            top: -100vh;\n          }\n        }\n      `}</style>\n      {\n        {\n          default: (\n            <DefaultTitle\n              background={story.stanzaBackgroundColor}\n              author={story.author}\n              stanzaCount={story.body.length}\n            >\n              {story.title}\n            </DefaultTitle>\n          ),\n          centered: (\n            <CenteredTitle\n              background={story.stanzaBackgroundColor}\n              author={story.author}\n            >\n              {story.title}\n            </CenteredTitle>\n          ),\n        }[story.titleCard]\n      }\n      <Body story={story} />\n      <style>{`\n        #attribution {\n          animation-name: attribution;\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        @keyframes attribution {\n          0% {\n            top: 100vh;\n          }\n          ${(story.body.length + 1) * oneIndexPercent}% {\n            top: 100vh;\n          }\n          100% {\n            top: 25vh;\n          }\n        }\n      `}</style>\n      {\n        {\n          default: (\n            <DefaultAttribution\n              background={story.stanzaBackgroundColor}\n              backlink={\"/read/bedtime-stories\"}\n            >\n              {story.attribution}\n            </DefaultAttribution>\n          ),\n          centered: (\n            <CenteredAttribution\n              background={story.stanzaBackgroundColor}\n              backlink={\"/read/bedtime-stories\"}\n            >\n              {story.attribution}\n            </CenteredAttribution>\n          ),\n        }[story.attributionCard]\n      }\n    </div>\n  );\n}\n"],"sourceRoot":""}