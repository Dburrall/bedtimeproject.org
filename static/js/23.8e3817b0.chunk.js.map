{"version":3,"sources":["Pages/Read/Stories/Story/Story.js","Pages/Read/Stories/Stories.js"],"names":["Story","story","useState","storyData","setStoryData","useEffect","fetch","title","then","resp","json","data","dataWithProcessedChapters","field_chapters","addDrupalUrlToImageTag","PaperStory","backLink","backLinkText","Stories","stories","setStories","StandardWrapper","exact","path","className","SEO","Bookshelf","pageTitle","books1","map","index","link","formatUrlString","BookLink","books2","books3"],"mappings":"gSAae,SAASA,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAC9B,EAAkCC,mBAASD,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAuCA,OArCAC,qBASE,WAeAC,MACE,oEAA8DL,QAA9D,IAA8DA,OAA9D,EAA8DA,EAAOM,QAEpEC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GAAU,IAAD,EACRC,EAAyB,2BAC1BD,EAAK,IADqB,IAE7BE,eAAgBC,YAAsB,UAACH,EAAK,UAAN,aAAC,EAASE,kBAElDT,EAAaQ,QApBjB,IAyBA,cAACG,EAAA,EAAD,CACEZ,UAAWA,EACXa,SAAS,gBACTC,aAAa,oB,mBC/BJ,SAASC,IACtB,MAA8BhB,mBAAS,IAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KAYA,OAJAf,qBAAU,WALRC,MAAM,wDACHE,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GAAD,OAAUS,EAAWT,QAK5B,IAGD,cAACU,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,gBAAlB,SACE,sBAAKC,UAAU,oBAAf,UACE,cAACC,EAAA,EAAD,CAAKlB,MAAM,YACX,cAACmB,EAAA,EAAD,CACEC,UAAU,UACVC,OAAQT,EAAQU,KAAI,SAAC5B,EAAO6B,GAC1B,GAAIA,EAAQ,EACV,OAAO,KAGT,IAAMC,EAAOC,YAAgB/B,EAAMM,OACnC,OACE,cAAC0B,EAAA,EAAD,CAEEF,KAAI,wBAAmBA,GACvB9B,MAAOA,GAFF6B,MAMXI,OAAQf,EAAQU,KAAI,SAAC5B,EAAO6B,GAC1B,GAAIA,GAAS,GAAKA,EAAQ,EACxB,OAAO,KAGT,IAAMC,EAAOC,YAAgB/B,EAAMM,OACnC,OACE,cAAC0B,EAAA,EAAD,CAEEF,KAAI,sBAAiBA,GACrB9B,MAAOA,GAFF6B,MAMXK,OAAQhB,EAAQU,KAAI,SAAC5B,EAAO6B,GAC1B,GAAIA,GAAS,GAAKA,EAAQ,EACxB,OAAO,KAET,IAAMC,EAAOC,YAAgB/B,EAAMM,OACnC,OACE,cAAC0B,EAAA,EAAD,CAEEF,KAAI,sBAAiBA,GACrB9B,MAAOA,GAFF6B,aAUhBX,EAAQU,KAAI,SAAC5B,EAAO6B,GACnB,IAAMC,EAAOC,YAAgB/B,EAAMM,OACnC,OACE,eAAC,IAAD,CAAmBe,OAAK,EAACC,KAAI,wBAAmBQ,GAAhD,UACE,cAACN,EAAA,EAAD,CAAKlB,MAAON,EAAMM,QAClB,cAACP,EAAD,CAAOC,MAAOA,MAFJ6B","file":"static/js/23.8e3817b0.chunk.js","sourcesContent":["// @ts-check\nimport React, { useEffect, useState } from \"react\";\nimport PaperStory from \"../../../../Components/General/PaperStory/PaperStory\";\nimport { addDrupalUrlToImageTag } from \"../../../../utils/addDrupalUrlToImageTag/addDrupalUrlToImageTag\";\n\n/**\n * @namespace Story\n * @function Story\n * @author Alexander Burdiss\n * @since 10/14/21\n * @version 1.0.1\n * @component\n */\nexport default function Story({ story }) {\n  const [storyData, setStoryData] = useState(story);\n\n  useEffect(\n    /**\n     * @function Story~useEffect~getStoryData\n     * @description Handles fetching the story data for the story being visited\n     * on page load.\n     * @author Alexander Burdiss\n     * @since 10/16/21\n     * @version 1.0.0\n     */\n    function getStoryData() {\n      fetchStoryData();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  /**\n   * @function fetchStoryData\n   * @description Fetches the individual story data from the server\n   * @author Alexander Burdiss\n   * @since 10/16/21\n   * @version 1.0.0\n   */\n  function fetchStoryData() {\n    fetch(\n      \"https://drupal.bedtimeproject.dev/rest/views/story?title=\" + story?.title\n    )\n      .then((resp) => resp.json())\n      .then((data) => {\n        const dataWithProcessedChapters = {\n          ...data[0],\n          field_chapters: addDrupalUrlToImageTag(data[0]?.field_chapters),\n        };\n        setStoryData(dataWithProcessedChapters);\n      });\n  }\n\n  return (\n    <PaperStory\n      storyData={storyData}\n      backLink=\"/read/stories\"\n      backLinkText=\"Back to Stories\"\n    />\n  );\n}\n","// @ts-check\nimport { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router\";\n\nimport SEO from \"../../../Components/Structural/SEO/SEO\";\nimport StandardWrapper from \"../../../Components/Structural/StandardWrapper/StandardWrapper\";\nimport BookLink from \"../../../Components/Buttons/BookLink/BookLink\";\nimport Bookshelf from \"../../../Components/General/Bookshelf/Bookshelf\";\n\nimport Story from \"./Story/Story\";\n\nimport \"./Stories.scss\";\nimport { formatUrlString } from \"../../../utils/formatUrlString/formatUrlString\";\n\n/**\n * @function Stories\n * @description The parent component that handles much of the navigation for the\n * stories tab screens. This component also provides a wrapper with padding used\n * on this stack only\n * @author Alexander Burdiss\n * @since 5/13/21\n * @version 2.0.0\n * @component\n * @example\n * <Stories />\n */\nexport default function Stories() {\n  const [stories, setStories] = useState([]);\n\n  function fetchStories() {\n    fetch(\"https://drupal.bedtimeproject.dev/rest/views/stories\")\n      .then((resp) => resp.json())\n      .then((data) => setStories(data));\n  }\n\n  useEffect(function getListOfStories() {\n    fetchStories();\n  }, []);\n\n  return (\n    <StandardWrapper>\n      <Switch>\n        <Route exact path=\"/read/stories\">\n          <div className=\"Stories-Container\">\n            <SEO title=\"Stories\" />\n            <Bookshelf\n              pageTitle=\"Stories\"\n              books1={stories.map((story, index) => {\n                if (index > 2) {\n                  return null;\n                }\n\n                const link = formatUrlString(story.title);\n                return (\n                  <BookLink\n                    key={index}\n                    link={`/read/stories/${link}`}\n                    story={story}\n                  />\n                );\n              })}\n              books2={stories.map((story, index) => {\n                if (index <= 2 || index > 5) {\n                  return null;\n                }\n\n                const link = formatUrlString(story.title);\n                return (\n                  <BookLink\n                    key={index}\n                    link={`/read/tales/${link}`}\n                    story={story}\n                  />\n                );\n              })}\n              books3={stories.map((story, index) => {\n                if (index <= 5 || index > 8) {\n                  return null;\n                }\n                const link = formatUrlString(story.title);\n                return (\n                  <BookLink\n                    key={index}\n                    link={`/read/tales/${link}`}\n                    story={story}\n                  />\n                );\n              })}\n            />\n          </div>\n        </Route>\n\n        {stories.map((story, index) => {\n          const link = formatUrlString(story.title);\n          return (\n            <Route key={index} exact path={`/read/stories/${link}`}>\n              <SEO title={story.title} />\n              <Story story={story} />\n            </Route>\n          );\n        })}\n      </Switch>\n    </StandardWrapper>\n  );\n}\n"],"sourceRoot":""}