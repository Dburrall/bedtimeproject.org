{"version":3,"sources":["Pages/Read/Tales/Tale/Tale.js","Pages/Read/Tales/Tales.js"],"names":["Tale","tale","useState","taleData","setTaleData","useEffect","fetch","title","then","resp","json","data","dataWithProcessedChapters","field_chapters","addDrupalUrlToImageTag","PaperStory","storyData","backLink","backLinkText","Tales","tales","setTales","StandardWrapper","exact","path","className","SEO","Bookshelf","pageTitle","books1","map","story","index","link","formatUrlString","BookLink","books2","books3"],"mappings":"wUAee,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAC7B,EAAgCC,mBAASD,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KAuCA,OArCAC,qBASE,WAeAC,MACE,2DAA6DL,EAAKM,OAEjEC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GAAU,IAAD,EACRC,EAAyB,2BAC1BD,EAAK,IADqB,IAE7BE,eAAgBC,YAAsB,UAACH,EAAK,UAAN,aAAC,EAASE,kBAElDT,EAAYQ,QApBhB,IAyBA,cAACG,EAAA,EAAD,CACEC,UAAWb,EACXc,SAAS,gBACTC,aAAa,oB,YCpCJ,SAASC,IACtB,MAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KAYA,OAJAhB,qBAAU,WALRC,MAAM,sDACHE,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GAAD,OAAUU,EAASV,QAK1B,IAGD,cAACW,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,cAAlB,SACE,sBAAKC,UAAU,kBAAf,UACE,cAACC,EAAA,EAAD,CAAKnB,MAAM,UACX,cAACoB,EAAA,EAAD,CACEC,UAAU,QACVC,OAAQT,EAAMU,KAAI,SAACC,EAAOC,GACxB,GAAIA,EAAQ,EACV,OAAO,KAGT,IAAMC,EAAOC,YAAgBH,EAAMxB,OACnC,OACE,cAAC4B,EAAA,EAAD,CAEEF,KAAI,sBAAiBA,GACrBF,MAAOA,GAFFC,MAMXI,OAAQhB,EAAMU,KAAI,SAACC,EAAOC,GACxB,GAAIA,GAAS,GAAKA,EAAQ,EACxB,OAAO,KAGT,IAAMC,EAAOC,YAAgBH,EAAMxB,OACnC,OACE,cAAC4B,EAAA,EAAD,CAEEF,KAAI,sBAAiBA,GACrBF,MAAOA,GAFFC,MAMXK,OAAQjB,EAAMU,KAAI,SAACC,EAAOC,GACxB,GAAIA,GAAS,GAAKA,EAAQ,EACxB,OAAO,KAET,IAAMC,EAAOC,YAAgBH,EAAMxB,OACnC,OACE,cAAC4B,EAAA,EAAD,CAEEF,KAAI,sBAAiBA,GACrBF,MAAOA,GAFFC,aAUhBZ,EAAMU,KAAI,SAACC,EAAOC,GACjB,IAAMC,EAAOC,YAAgBH,EAAMxB,OACnC,OACE,eAAC,IAAD,CAAmBgB,OAAK,EAACC,KAAI,sBAAiBS,GAA9C,UACE,cAACP,EAAA,EAAD,CAAKnB,MAAOwB,EAAMxB,QAClB,cAAC,EAAD,CAAMN,KAAM8B,MAFFC","file":"static/js/20.6f7f7e5c.chunk.js","sourcesContent":["// @ts-check\nimport React, { useState, useEffect } from \"react\";\nimport \"./Tale.scss\";\n\nimport PaperStory from \"../../../../Components/General/PaperStory/PaperStory\";\nimport { addDrupalUrlToImageTag } from \"../../../../utils/addDrupalUrlToImageTag/addDrupalUrlToImageTag\";\n\n/**\n * @namespace Tale\n * @function Tale\n * @author Alexander Burdiss\n * @since 10/17/21\n * @version 1.0.0\n * @component\n */\nexport default function Tale({ tale }) {\n  const [taleData, setTaleData] = useState(tale);\n\n  useEffect(\n    /**\n     * @function Tale~useEffect~getTaleData\n     * @description Handles fetching the tale data for the tale being visited\n     * on page load.\n     * @author Alexander Burdiss\n     * @since 10/16/21\n     * @version 1.0.0\n     */\n    function getTaleData() {\n      fetchTaleData();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  /**\n   * @function Tale~fetchTaleData\n   * @description Fetches the individual tale data from the server\n   * @author Alexander Burdiss\n   * @since 10/16/21\n   * @version 1.0.0\n   */\n  function fetchTaleData() {\n    fetch(\n      \"https://drupal.bedtimeproject.dev/rest/views/tale?title=\" + tale.title\n    )\n      .then((resp) => resp.json())\n      .then((data) => {\n        const dataWithProcessedChapters = {\n          ...data[0],\n          field_chapters: addDrupalUrlToImageTag(data[0]?.field_chapters),\n        };\n        setTaleData(dataWithProcessedChapters);\n      });\n  }\n\n  return (\n    <PaperStory\n      storyData={taleData}\n      backLink=\"/read/stories\"\n      backLinkText=\"Back to Stories\"\n    />\n  );\n}\n","// @ts-check\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router\";\n\nimport StandardWrapper from \"../../../Components/Structural/StandardWrapper/StandardWrapper\";\nimport BookLink from \"../../../Components/Buttons/BookLink/BookLink\";\nimport { formatUrlString } from \"../../../utils/formatUrlString/formatUrlString\";\n\nimport \"./Tales.scss\";\nimport SEO from \"../../../Components/Structural/SEO/SEO\";\nimport Tale from \"./Tale/Tale\";\nimport Bookshelf from \"../../../Components/General/Bookshelf/Bookshelf\";\n\n/**\n * @function Tales\n * @description A collection of longer poems on the site\n * @author Alexander Burdiss\n * @since 6/15/21\n * @version 3.0.1\n * @component\n * @example\n * <Tales />\n */\nexport default function Tales() {\n  const [tales, setTales] = useState([]);\n\n  function fetchTales() {\n    fetch(\"https://drupal.bedtimeproject.dev/rest/views/tales\")\n      .then((resp) => resp.json())\n      .then((data) => setTales(data));\n  }\n\n  useEffect(function getListOfTales() {\n    fetchTales();\n  }, []);\n\n  return (\n    <StandardWrapper>\n      <Switch>\n        <Route exact path=\"/read/tales\">\n          <div className=\"Tales-Container\">\n            <SEO title=\"Tales\" />\n            <Bookshelf\n              pageTitle=\"Tales\"\n              books1={tales.map((story, index) => {\n                if (index > 2) {\n                  return null;\n                }\n\n                const link = formatUrlString(story.title);\n                return (\n                  <BookLink\n                    key={index}\n                    link={`/read/tales/${link}`}\n                    story={story}\n                  />\n                );\n              })}\n              books2={tales.map((story, index) => {\n                if (index <= 2 || index > 5) {\n                  return null;\n                }\n\n                const link = formatUrlString(story.title);\n                return (\n                  <BookLink\n                    key={index}\n                    link={`/read/tales/${link}`}\n                    story={story}\n                  />\n                );\n              })}\n              books3={tales.map((story, index) => {\n                if (index <= 5 || index > 8) {\n                  return null;\n                }\n                const link = formatUrlString(story.title);\n                return (\n                  <BookLink\n                    key={index}\n                    link={`/read/tales/${link}`}\n                    story={story}\n                  />\n                );\n              })}\n            />\n          </div>\n        </Route>\n\n        {tales.map((story, index) => {\n          const link = formatUrlString(story.title);\n          return (\n            <Route key={index} exact path={`/read/tales/${link}`}>\n              <SEO title={story.title} />\n              <Tale tale={story} />\n            </Route>\n          );\n        })}\n      </Switch>\n    </StandardWrapper>\n  );\n}\n"],"sourceRoot":""}